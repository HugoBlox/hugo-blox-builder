name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
    #        node-version: [18.x]

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true # Fetch any Git submodules (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      #      - name: Use Node.js ${{ matrix.node-version }}
      #        uses: actions/setup-node@v3
      #        with:
      #          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v4
        with:
          run_install: |
            - recursive: false
              args: [--frozen-lockfile]

      - name: Install Tailwind v4 dependencies for test site
        run: |
          cd test
          pnpm install --frozen-lockfile
          cd ..

      - name: Check for linting errors
        run: pnpm run lint:js # TODO: also lint styles again once new rule errors resolved

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.148.2'
          extended: true

      - name: Build
        run: hugo --minify --templateMetrics --templateMetricsHints
        working-directory: test
#  format:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          # Make sure the actual branch is checked out when running on pull requests
#          ref: ${{ github.head_ref }}
#
#      - name: Prettify code
#        uses: creyD/prettier_action@v3.1
#        with:
#          prettier_options: '--write blox-tailwind/*.{css,js,json,md,scss} blox-tailwind/**/*.{css,js,json,md,scss}' # Match package.json
#          prettier_version: '2.2.1' # Match package.json
#          commit_message: 'refactor: format code'
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
