name: CI - Build Starters Matrix
run-name: ${{ github.workflow }} - ${{ github.ref_name }}

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "modules/**"
      - "starters/**"
  pull_request:
    paths:
      - "modules/**"
      - "starters/**"

permissions:
  contents: read

concurrency:
  group: starters-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "22"

jobs:
  build-starters:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        starter:
          - name: academic-cv
            path: starters/academic-cv
          - name: landing-page
            path: starters/landing-page

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0

      - name: Compute resources cache key
        id: reskey
        run: |
          set -euo pipefail
          P=${{ matrix.starter.path }}
          # Hash tracked files under assets/config and key files for invalidation
          HASH=$(git ls-files -s "$P/assets" "$P/config" "$P/hugoblox.yaml" "$P/package.json" 2>/dev/null | sha256sum | cut -d' ' -f1 || true)
          if [ -z "$HASH" ]; then HASH="nohash"; fi
          echo "key=${{ runner.os }}-hugo-resources-${{ matrix.starter.name }}-$HASH" >> $GITHUB_OUTPUT

      - name: Cache Hugo resources (starter)
        uses: actions/cache@v4
        with:
          path: ${{ matrix.starter.path }}/resources/
          key: ${{ steps.reskey.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-hugo-resources-${{ matrix.starter.name }}-

      

      - name: Enable Corepack (for pnpm cache)
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "${{ env.NODE_VERSION }}"
          cache: "pnpm"

      - name: Activate pnpm from root package.json
        run: pnpm --version

      - name: Install starter dependencies
        working-directory: ${{ matrix.starter.path }}
        # Don't use --frozen-lockfile as starters have auto-generated package.json with simple deps (Tailwind CLI)
        # and may not have lock files checked into the repo
        run: pnpm install

      - name: Read Hugo version from starter
        id: hugo
        run: |
          set -euo pipefail
          P=${{ matrix.starter.path }}
          VERSION=$(grep -E "^\s*hugo_version:\s*['\"]?" "$P/hugoblox.yaml" | sed -E "s/.*hugo_version:\s*['\"]?([^'\"]+)['\"]?.*/\1/")
          if [ -z "$VERSION" ]; then
            echo "::error::Could not read hugo_version from $P/hugoblox.yaml"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "${{ steps.hugo.outputs.version }}"
          extended: true

      - name: Build ${{ matrix.starter.name }}
        working-directory: ${{ matrix.starter.path }}
        run: hugo --minify --panicOnWarning
